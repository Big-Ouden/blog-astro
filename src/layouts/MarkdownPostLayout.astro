---
import BaseLayout from "@layouts/BaseLayout.astro";
import Prose from '@components/Prose.astro';
import { getLangFromUrl, getLanguageLabel, useTranslations, getLocalizedPath } from '@i18n/utils';
import { Image } from 'astro:assets';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

interface Props {
    frontmatter: {
        title: string;
        description?: string;
        author?: string;
        pubDate: string | Date;
        tags?: string[];
        image?: {
            url: string;
            alt?: string;
        };
    };
}

const { frontmatter } = Astro.props;

// Conversion de la date
const pubDate = new Date(frontmatter.pubDate);

// Génération des métadonnées pour l'article
const articleDescription = frontmatter.description || `Article de blog par ${frontmatter.author || 'BigOuden'}`;
const articleTags = frontmatter.tags || [];
---

<BaseLayout 
    pageTitle={frontmatter.title}
    description={articleDescription}
    image={frontmatter.image?.url}
    type="article"
>
    <article>
        <header class="mb-8">
            <h1 class="text-xl md:text-3xl mb-4">{frontmatter.title}</h1>
            
            {frontmatter.image && (
                <div class="mb-6">
                    <Image 
                        src={frontmatter.image.url} 
                        alt={frontmatter.image.alt || frontmatter.title} 
                        loading="eager" 
                        class="w-full rounded-lg shadow-lg" 
                        width={800}
                        height={400}
                    />
                </div>
            )}
         
        </header>
        
        <div class="divider"></div>
        
        <div class="mb-20">
            <Prose>
                <slot />
            </Prose>
        </div>
        
        <footer class="mt-16 pt-8 border-t border-base-300">
            {articleTags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-4">
                    <span class="text-sm text-fg-200">{t('blog.tags')}:</span>
                    {articleTags.map((tag: string) => (
                        <a 
                            href={getLocalizedPath(lang, `/tags/${tag}`)} 
                            class="text-sm bg-base-200 hover:bg-base-300 px-2 py-1 rounded transition-colors"
                        >
                            #{tag}
                        </a>
                    ))}
                </div>
            )}
            
            <div class="text-xs text-fg-200">
                <p>
                    {t('blog.publishedOn')} 
                    <time datetime={pubDate.toISOString()}>
                        {pubDate.toLocaleDateString(lang, { 
                            weekday: 'long', 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric' 
                        })}
                    </time>
                </p>
                {frontmatter.author && (
                    <p>{t('blog.writtenBy')} {frontmatter.author}</p>
                )}
            </div>
        </footer>
    </article>
</BaseLayout>
